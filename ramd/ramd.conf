# ramd.conf - RAM Daemon Configuration File
# Copyright (c) 2024-2025, pgElephant, Inc.
#
# This file configures the RAM daemon (ramd) for PostgreSQL auto-failover
# with librale distributed consensus.

#==============================================================================
# POSTGRESQL CONFIGURATION
#==============================================================================
[postgresql]
# PostgreSQL data directory
pgdata = /var/lib/postgresql/data

# PostgreSQL port
pgport = 5432

# PostgreSQL host (for connections)
pghost = localhost

# PostgreSQL user for management operations
pguser = postgres

# PostgreSQL binary directory (optional, auto-detected if not set)
pgbin = /usr/local/pgsql/bin

# PostgreSQL configuration file (optional, auto-detected if not set)
pgconf = /var/lib/postgresql/data/postgresql.conf

# Maximum time to wait for PostgreSQL operations (seconds)
pg_timeout = 30

#==============================================================================
# LIBRALE CONFIGURATION
#==============================================================================
[librale]
# Node identification
node_id = 1
node_name = ram-node-01

# Network configuration
bind_ip = 0.0.0.0
rale_port = 7400
dstore_port = 7401

# External addresses (for multi-homed systems)
external_ip = 0.0.0.0
advertise_rale_port = 7400
advertise_dstore_port = 7401

# Cluster configuration
cluster_name = ram_cluster
cluster_id = 1

# Data storage settings
data_dir = /var/lib/ram/data
log_dir = /var/lib/ram/logs
state_dir = /var/lib/ram/state

# Database settings
db_sync_mode = full
db_cache_size = 64MB
db_checkpoint_interval = 300

# Communication settings
protocol = unix
timeout = 30
max_retries = 3
socket = /var/lib/ram/ram.sock

#==============================================================================
# REPLICATION CONFIGURATION
#==============================================================================
[replication]
# Replication mode: async, synchronous, or auto
mode = synchronous

# Synchronous replication settings
synchronous_commit = remote_apply
sync_timeout = 30
max_sync_standbys = 1
min_sync_standbys = 1

# Auto-synchronous mode (automatically adjust based on cluster health)
auto_sync_mode = true

# Replication lag thresholds (milliseconds)
max_lag_threshold = 10000
warning_lag_threshold = 5000

# Failover settings
failover_timeout = 30
promotion_timeout = 60
demotion_timeout = 30

#==============================================================================
# HTTP API CONFIGURATION
#==============================================================================
[http_api]
# Enable/disable HTTP API
enabled = true

# HTTP server settings
port = 8080
bind_address = 0.0.0.0
max_connections = 100
backlog = 128

# SSL/TLS settings
ssl_enabled = false
ssl_cert_path = /etc/ssl/certs/ramd.crt
ssl_key_path = /etc/ssl/private/ramd.key
ssl_ca_path = /etc/ssl/certs/ca.crt

# API security
api_key_required = false
api_key = 
allowed_networks = 0.0.0.0/0

# Rate limiting
rate_limit_requests = 1000
rate_limit_window = 60

#==============================================================================
# MAINTENANCE CONFIGURATION
#==============================================================================
[maintenance]
# Enable/disable maintenance mode
allow_maintenance_mode = true

# Maintenance timeouts (seconds)
maintenance_timeout = 3600
drain_timeout = 300
handoff_timeout = 120

# Maintenance behavior
block_failover_during_maintenance = true
allow_writes_during_maintenance = false
auto_exit_maintenance_on_timeout = true

# Maintenance scheduling
allow_scheduled_maintenance = true
maintenance_window_start = 02:00
maintenance_window_end = 06:00

#==============================================================================
# MONITORING CONFIGURATION
#==============================================================================
[monitor]
# Health check intervals (milliseconds)
health_check_interval = 5000
postgres_health_check_interval = 10000
cluster_health_check_interval = 15000

# Health thresholds
max_health_check_failures = 3
health_check_timeout = 5000

# Metrics collection
collect_metrics = true
metrics_interval = 60000
metrics_retention_hours = 24

# Alerting
alerts_enabled = true
alert_email = admin@example.com
alert_smtp_server = localhost
alert_smtp_port = 25

#==============================================================================
# LOGGING CONFIGURATION
#==============================================================================
[logging]
# Log level: error, warning, info, debug
level = info

# Log destination: stderr, stdout, file, syslog
destination = file

# File logging settings
log_file = /var/log/ramd/ramd.log
log_max_size = 100MB
log_max_files = 10
log_compression = true

# Syslog settings (when destination = syslog)
syslog_facility = daemon
syslog_ident = ramd

# Log format
log_format = json
include_timestamp = true
include_pid = true
include_thread_id = true

#==============================================================================
# DAEMON CONFIGURATION
#==============================================================================
[daemon]
# Process management
pid_file = /var/run/ramd/ramd.pid
user = postgres
group = postgres

# Runtime settings
foreground = false
daemonize = true

# Process limits
max_open_files = 65536
max_processes = 1000

# Restart behavior
auto_restart = true
max_restarts = 5
restart_delay = 5

#==============================================================================
# FAILOVER CONFIGURATION
#==============================================================================
[failover]
# Failover strategy: automatic, manual, or supervised
strategy = automatic

# Automatic failover settings
auto_failover_enabled = true
auto_failover_timeout = 60
auto_failover_retries = 3

# Manual failover settings
manual_failover_timeout = 120
manual_failover_confirmation = false

# Failover conditions
failover_on_network_partition = true
failover_on_postgres_crash = true
failover_on_disk_full = false

# Failover validation
validate_failover_target = true
check_replication_lag_before_failover = true
max_replication_lag_for_failover = 30000

#==============================================================================
# SECURITY CONFIGURATION
#==============================================================================
[security]
# Authentication
require_authentication = false
auth_method = none

# Network security
bind_to_localhost_only = false
allowed_networks = 0.0.0.0/0

# File permissions
strict_file_permissions = true
umask = 077

# SSL/TLS for internal communication
internal_ssl_enabled = false
internal_ssl_cert_path = 
internal_ssl_key_path = 

#==============================================================================
# PERFORMANCE CONFIGURATION
#==============================================================================
[performance]
# Thread pool settings
worker_threads = 4
max_worker_threads = 16
worker_queue_size = 1000

# Connection pooling
max_connections = 100
connection_timeout = 30
idle_timeout = 300

# Memory settings
max_memory_mb = 512
gc_interval = 300

# Background task intervals (milliseconds)
background_task_interval = 1000
cleanup_interval = 60000

#==============================================================================
# BACKUP AND RECOVERY
#==============================================================================
[backup]
# Backup settings
backup_enabled = true
backup_interval = 86400
backup_retention_days = 7

# Backup locations
backup_dir = /var/lib/ram/backups
backup_format = tar
backup_compression = true

# WAL archiving
wal_archiving_enabled = true
wal_archive_dir = /var/lib/ram/wal_archive
wal_archive_timeout = 300

# Recovery settings
recovery_timeout = 300
recovery_retries = 3
